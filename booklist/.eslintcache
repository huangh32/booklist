[{"D:\\ReactProject\\reactproject3\\booklist\\booklist\\src\\index.js":"1","D:\\ReactProject\\reactproject3\\booklist\\booklist\\src\\App.js":"2","D:\\ReactProject\\reactproject3\\booklist\\booklist\\src\\reportWebVitals.js":"3","D:\\ReactProject\\reactproject3\\booklist\\booklist\\src\\components\\Book.js":"4","D:\\ReactProject\\reactproject3\\booklist\\booklist\\src\\contexts\\ThemeContext.js":"5"},{"size":547,"mtime":1611932677833,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1612279827085,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":9815,"mtime":1612280478373,"results":"10","hashOfConfig":"7"},{"size":546,"mtime":1611936451907,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ybtxxo",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"D:\\ReactProject\\reactproject3\\booklist\\booklist\\src\\index.js",[],["26","27"],"D:\\ReactProject\\reactproject3\\booklist\\booklist\\src\\App.js",["28","29"],"import React,{Component} from 'react';\nimport './App.css';\nimport Book from './components/Book';\nimport axios from 'axios';\nimport ThemeContextProvider from './contexts/ThemeContext';\n\nexport default class App extends React.Component {\n\n  render(){\n    return (\n      <div className=\"App\">\n        <ThemeContextProvider>\n      <h1>My BookList App</h1>\n      <Book />\n      </ThemeContextProvider>\n      </div>\n    );\n  }\n}\n\n\n","D:\\ReactProject\\reactproject3\\booklist\\booklist\\src\\reportWebVitals.js",[],"D:\\ReactProject\\reactproject3\\booklist\\booklist\\src\\components\\Book.js",["30","31","32","33","34"],"import React, {Component, useState} from 'react';\r\nimport styles from './styles.css';\r\nimport {Table, Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, FormText, Label, Input} from 'reactstrap';\r\nimport {Card} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nexport default class Book extends React.Component {\r\n\r\n     constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        books: [{name:'Harry Potter',\r\n        price:'35.5 CAD',\r\n        categories:'Fiction',\r\n        des:'A book for reading'}],\r\n        newBook: false,\r\n        editBookToggle: false,\r\n        newData:{\r\n            name:'',\r\n            price:'',\r\n            categories:'',\r\n            des:''\r\n        },\r\n        editData:{\r\n            name:'',\r\n            price:'',\r\n            categories:'',\r\n            des:''\r\n        }\r\n        }\r\n        this.addNew = this.addNew.bind(this);\r\n        this.confirmAdded = this.confirmAdded.bind(this);\r\n        this.deleteBook = this.deleteBook.bind(this);\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n        this.editBook = this.editBook.bind(this);\r\n        this.update = this.update.bind(this);\r\n\r\n    }\r\n    \r\n    // apilink = 'https://www.googleapis.com/books/v1/volumes?q=flowers+inauthor:keyes&key=AIzaSyDqQ6hADLtNqQ9kzAxsxxR7hwld1ankTs0';\r\n    \r\n    // componentWillMount = () => {\r\n    //     axios.get('https://www.googleapis.com/books/v1/volumes?q=flowers+inauthor:keyes&key=AIzaSyDqQ6hADLtNqQ9kzAxsxxR7hwld1ankTs0').then((response) =>{\r\n    //         this.setState({\r\n    //             books:response.data.items\r\n    //         })\r\n    //     });\r\n    // }\r\n\r\n    addNew() {\r\n        this.setState({\r\n            newBook:!this.state.newBook//for toggle\r\n        })\r\n        \r\n    }\r\n\r\n    toggleEdit() {\r\n        this.setState({\r\n            editBookToggle: !this.state.editBookToggle//for edit toggle\r\n        })\r\n    }\r\n\r\n\r\n\r\n    //confirm add new book\r\n    confirmAdded() {\r\n        let {books} = this.state;\r\n        books.push({\r\n            name:this.state.newData.name,\r\n            price:this.state.newData.price,\r\n            categories:this.state.newData.categories,\r\n            des:this.state.newData.des\r\n        })\r\n        this.setState({books, newBook:false, newData:{\r\n            name:'',\r\n            price:'',\r\n            categories:'',\r\n            des:''\r\n        }})\r\n        console.log('added');\r\n         console.log('the current data is: ', this.state.books);\r\n    }\r\n\r\n    //delete book button\r\n    deleteBook(e){\r\n        let {books} = this.state;\r\n        books.splice(e, 1);\r\n        this.setState({\r\n            books\r\n        })\r\n\r\n        console.log('delete book.');\r\n        console.log('the delete current is: ', books);\r\n\r\n    }\r\n\r\n\r\n    //edit book button\r\n    editBook(name,price,categories,des){   \r\n        // let {editData} = this.state;\r\n        // editData.push({\r\n        //     name:this.state.editData.name,\r\n        //     price:this.state.editData.price,\r\n        //     categories:this.state.editData.categories,\r\n        //     des:this.state.editData.des\r\n        // });\r\n        this.setState({editData : {name,price,categories,des },editBookToggle:true});\r\n        console.log('edit book button');\r\n\r\n    }\r\n\r\n    update(e){\r\n        // let{name, price, categories, des} = this.state.editData;\r\n        let{books} = this.state;\r\n        console.log('the prev edit Data is: ',this.state.editData );\r\n        books[0].name  = this.state.editData.name;\r\n        books[0].price  = this.state.editData.price;\r\n        books[0].categories = this.state.editData.categories;\r\n        books[0].des = this.state.editData.des;\r\n        console.log('after books is: ',books);\r\n        this.setState({\r\n            books,\r\n            editBookToggle:false,\r\n            editData: {\r\n                name:'',\r\n                price:'',\r\n                categories:'',\r\n                des:''\r\n            }\r\n        })\r\n        console.log('books',this.state.books);\r\n        console.log('confirm Update!!');\r\n    }\r\n\r\n    render(){\r\n        let books = this.state.books.map((i) =>{\r\n            return (\r\n\r\n            <tr key={i.id}>\r\n                <td >{i.name}</td>\r\n                <td>{i.price} </td>\r\n                <td>{i.categories}</td>\r\n                <td>{i.des}</td>\r\n                <td>\r\n                    <Button color = \"primary\" size=\"sm\" className = \"mr-2\" active onClick = {this.editBook}>Edit</Button>\r\n                    \r\n                    <Button color = \"danger\" size = \"sm\" active onClick={this.deleteBook}>Delete</Button>\r\n                </td>\r\n            </tr>\r\n            )\r\n        });\r\n\r\n        return(\r\n            <div className={styles.text}>\r\n            <Table>\r\n            <Button color=\"primary\" onClick={this.addNew}>Add A New Book</Button>\r\n            <Modal isOpen={this.state.newBook} toggle={this.addNew} >\r\n                <ModalHeader toggle={this.addNew}>Modal title</ModalHeader>\r\n                <ModalBody>\r\n                <Form >\r\n                    <FormGroup>\r\n                        <Label for=\"name\">Book Name</Label>\r\n                        <Input id=\"name\"  placeholder=\"Please type Book Name\" value={this.state.newData.name} onChange={(e) => {\r\n                            let {newData} = this.state;\r\n                            newData.name = e.target.value;\r\n                            this.setState({newData});\r\n                        }}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"price\">Price</Label>\r\n                        <Input id=\"price\"  placeholder=\"Please type Price in CAD\" value={this.state.newData.price} onChange={(e) => {\r\n                            let {newData} = this.state;\r\n                            newData.price = e.target.value;\r\n                            this.setState({newData});\r\n                        }}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"categories\">category</Label>\r\n                        <Input  id=\"categories\"  placeholder=\"Please type Category\" value={this.state.newData.categories} onChange={(e) => {\r\n                            let {newData} = this.state;\r\n                            newData.categories = e.target.value;\r\n                            this.setState({newData});\r\n                        }}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"des\">Description</Label>\r\n                        <Input id=\"des\"  placeholder=\"Please type Description\" value={this.state.newData.des}  onChange={(e) => {\r\n                            let {newData} = this.state;\r\n                            newData.des = e.target.value;\r\n                            this.setState({newData});\r\n                        }}/>\r\n                    </FormGroup>\r\n                </Form>\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                <Button color=\"primary\" onClick={this.confirmAdded}>Confirm Added</Button>\r\n                <Button color=\"secondary\" onClick={this.addNew} >Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n\r\n            <Modal  isOpen={this.state.editBookToggle} toggle={this.toggleEdit} >\r\n                <ModalHeader toggle={this.toggleEdit}>Modal title</ModalHeader>\r\n                <ModalBody>\r\n                <Form >\r\n                    <FormGroup>\r\n                        <Label for=\"name\">Book Name</Label>\r\n                        <Input id=\"name\"  placeholder=\"Please update title name\" value={this.state.editData.name} onChange={(e) => {\r\n                            let {editData} = this.state;\r\n                            editData.name = e.target.value;\r\n                            this.setState({editData});\r\n                        }}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"price\">Price</Label>\r\n                        <Input id=\"price\"  placeholder=\"Please type Price in CAD\" value={this.state.editData.price} onChange={(e) => {\r\n                            let {editData} = this.state;\r\n                            editData.price = e.target.value;\r\n                            this.setState({editData});\r\n                        }}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"categories\">category</Label>\r\n                        <Input  id=\"categories\"  placeholder=\"Please type Category\" value={this.state.editData.categories} onChange={(e) => {\r\n                            let {editData} = this.state;\r\n                            editData.categories = e.target.value;\r\n                            this.setState({editData});\r\n                        }}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"des\">Description</Label>\r\n                        <Input id=\"des\"  placeholder=\"Please type Description\" value={this.state.editData.des}  onChange={(e) => {\r\n                            let {editData} = this.state;\r\n                            editData.des = e.target.value;\r\n                            this.setState({editData});\r\n                        }}/>\r\n                    </FormGroup>\r\n                </Form>\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                <Button color=\"primary\" onClick={this.update}>Updated</Button>\r\n                <Button color=\"secondary\" onClick={this.toggleEdit} >Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n            \r\n\r\n            <tbody>\r\n                \r\n              {books}\r\n              \r\n\r\n            </tbody>\r\n            </Table>\r\n            </div>\r\n        );\r\n    \r\n}\r\n}\r\n\r\n","D:\\ReactProject\\reactproject3\\booklist\\booklist\\src\\contexts\\ThemeContext.js",[],["35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":15,"nodeType":"43","messageId":"44","endLine":1,"endColumn":24},{"ruleId":"41","severity":1,"message":"45","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":13},{"ruleId":"41","severity":1,"message":"42","line":1,"column":16,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"41","severity":1,"message":"46","line":1,"column":27,"nodeType":"43","messageId":"44","endLine":1,"endColumn":35},{"ruleId":"41","severity":1,"message":"47","line":3,"column":85,"nodeType":"43","messageId":"44","endLine":3,"endColumn":93},{"ruleId":"41","severity":1,"message":"48","line":4,"column":9,"nodeType":"43","messageId":"44","endLine":4,"endColumn":13},{"ruleId":"41","severity":1,"message":"45","line":5,"column":8,"nodeType":"43","messageId":"44","endLine":5,"endColumn":13},{"ruleId":"37","replacedBy":"49"},{"ruleId":"39","replacedBy":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'useState' is defined but never used.","'FormText' is defined but never used.","'Card' is defined but never used.",["51"],["52"],"no-global-assign","no-unsafe-negation"]